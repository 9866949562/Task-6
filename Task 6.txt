1.Create a table emp1 to store employee details as shown below and write statement for following queries based on table.

create table emp1(
EMPNO int primary key,
ENAME varchar(30),
JOB varchar(30),
MGR int,
HIREDATE date,
SAL decimal(10,2),
COMM float(10,2),
DEPTNO int not null
);
insert into emp1 VALUES
(8369,'smith','clerk',8902,'1990-12-18',800.00,NULL,20),
(8499,'anya','salesman',8698,'1991-02-28',1600.00,300.00,30),
(8521,'sneth','salesman',8698,'1991-02-20',1250.00,500.00,30),
(8566,'mahadevan','manager',8839,'1991-04-02',2985.00,NULL,20),
(8654,'momin','salesman',8698,'1991-09-28',1250.00,1400.00,30),
(8698,'bina','manager',8839,'1991-05-01',2850.00,NULL,30),
(8882,'shivansh','manager',8839,'1991-06-09',2450.00,NULL,10),
(8888,'scott','analyst',8566,'1992-12-09',3000.00,NULL,20),
(8839,'amir','president',NULL,'1991-11-18',5000.00,NULL,10),
(8844,'kuldeep','salesman',8698,'1991-09-08',1500.00,0.00,30);

SELECT*from emp1;

1.Consider the Employee table and write SQL command to get the following.

A. Write a query to display ename and sal of employee whose salary are greater than or equal to 2200?

     SELECT ename,sal FROM emp1 WHERE sal>2200;
     
B.Write a query to display details of employees who are not getting commission?

      SELECT*FROM emp1 WHERE(comm is null||comm=0.00);  
      
C.Write a query to display employee name and salary of those employees who don't have their salary in range of 2500 to 4000?

      SELECT ename,sal FROM emp1 WHERE sal NOT BETWEEN 2500 AND 4000;

D.write a query to display the name,job title and salary of employees who don't have a manager?
  
      SELECT ename,job,sal FROM emp1 WHERE mgr IS NULL;
      
E.Write a query to display the name of an employee whose name contains"A" as third alphabet?

      SELECT ename FROM emp1 WHERE ename like'  A%';
      
F.Write a query to display the name of an employee whose name contains "T" as the last alphabet?

     SELECT ename FROM emp1 WHERE ename like'%T';  




2.Write a program for JDBC to connectivity and insert the below data. 

Empcod                 empname                  empag             esalar
 e                     e                         e                  e

101                   jenny                      25               10000
102                   jacky                      30               20000
103                   Joe                        20               40000
104                   jhon                       40               80000
105                   shameer                    25               90000


import java.sql.*;

public class InsertData {

	public static void main(String[] args) {
	

		        // Database URL, username, and password
		        String url = "jdbc:mysql://localhost:3306/sppu";
		        String user = "root";
		        String password = "algo.";

		        // SQL query
		        String query = "INSERT INTO employee (Empcod, empname, empag, esalar) VALUES (?, ?, ?, ?)";

		        try {
		            // Establishing the connection
		            Connection connection = DriverManager.getConnection(url, user, password);

		            // Creating a PreparedStatement
		            PreparedStatement preparedStatement = connection.prepareStatement(query);

		            // Inserting data
		            preparedStatement.setInt(1, 101);
		            preparedStatement.setString(2, "Jenny");
		            preparedStatement.setInt(3, 25);
		            preparedStatement.setInt(4, 10000);
		            preparedStatement.executeUpdate();

		            preparedStatement.setInt(1, 102);
		            preparedStatement.setString(2, "Jacky");
		            preparedStatement.setInt(3, 30);
		            preparedStatement.setInt(4, 20000);
		            preparedStatement.executeUpdate();

		            preparedStatement.setInt(1, 103);
		            preparedStatement.setString(2, "Joe");
		            preparedStatement.setInt(3, 20);
		            preparedStatement.setInt(4, 40000);
		            preparedStatement.executeUpdate();

		            preparedStatement.setInt(1, 104);
		            preparedStatement.setString(2, "John");
		            preparedStatement.setInt(3, 40);
		            preparedStatement.setInt(4, 80000);
		            preparedStatement.executeUpdate();

		            preparedStatement.setInt(1, 105);
		            preparedStatement.setString(2, "Shameer");
		            preparedStatement.setInt(3, 25);
		            preparedStatement.setInt(4, 90000);
		            preparedStatement.executeUpdate();

		            // Closing resources
		            preparedStatement.close();
		            connection.close();

		            System.out.println("Data inserted successfully!");
		        } catch (SQLException e) {
		            e.printStackTrace();
		        }
		    }
		}
			